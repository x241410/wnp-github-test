#NOTE: 
#Use the style  parameter.name=${parameter.name}    --> To run from Console/Jenkins
#Use the style  parameter.name=someValue  --> To run from local 

#Begin Parameters: ============================================================

#selenium.remote=false
selenium.remote=${selenium.remote}

#selenium.gridurl=
selenium.gridurl=${selenium.gridurl}

#Options (previously known as capabilities) for the browsers --> P_NA / GENERIC_ONE /REMOTE(Docker remote machines) MORE TO DEFINE ACCORDING TO NEEDS
#selenium.browser.options=P_NA
selenium.browser.options=P_ACCEPT_BEHAVIORS_AND_CERTIFICATES
#selenium.browser.options=${selenium.browser.options}

#Options: CHROME / FIREFOX / IE
#selenium.browser=CHROME
selenium.browser=${selenium.browser}
#selenium.browser=PHANTOMJS
cross.browser=false

#webdriver.phantomJS.driver=D:\\PhantomJS\\phantomjs-2.1.1-windows\\bin\\phantomjs.exe


webdriver.chrome.driver=.\\src\\test\\resources\\Drivers\\Chrome\\V_102\\chromedriver.exe
#webdriver.chrome.driver=${webdriver.chrome.driver}


#webdriver.chrome.driver=.\\src\\test\\resources\\Drivers\\Chrome\\V2_30\\chromedriver.exe
#webdriver.chrome.driver=.\\src\\test\\resources\\Drivers\\Chrome\\V2_37\\chromedriver.exe
#webdriver.chrome.driver=.\\src\\test\\resources\\Drivers\\Chrome\\V77_0\\chromedriver.exe

#webdriver.ie.driver=C:\\bin\\drivers\\IE32\\IEDriverServer.exe
webdriver.ie.driver=${webdriver.ie.driver}

#webdriver.gecko.driver=C:\\bin\\drivers\\geckodriver.exe
webdriver.gecko.driver=${webdriver.gecko.driver}

#execution.environment=PT168
execution.environment=${execution.environment}

healthcheck.environment=PT168:TELUS_DESKTOP_ONE:TELUS_DESKTOP_ONE,PT140:TELUS_DESKTOP_ONE:TELUS_DESKTOP_ONE,PT148:TELUS_DESKTOP_ONE:TELUS_DESKTOP_ONE
#Options: ALL, NONE, ONLY_FAILED, ALL_EXCEPT_PASSED
url.iteration=50

video.recording=NONE
#video.recording=${video.recording}

#Options: DEFAULT will use the same project path; e.g. projectpath\TestReport\Videos.  
#         Any other value will sent to that location e.g. C:\\videos
video.folderpath=DEFAULT
#video.folderpath=${video.folderpath}

#Options: For retry features, if =0 then will not retry anything   IMPORTANT NOTE: Max supported number=5
#retry.testng=0
retry.testng=${retry.testng}

#Options: For wait timeouts (Data in milliseconds)
selenium.genericpagewaittimeout=5000
selenium.longwaittimeout=10000
selenium.shortwaittimeout=5000

#Reporting configuration parameters
reporting.extent=true
reporting.testng=true

# reporting.log4j=true for local log4j logs  OR   reporting.log4j=false for log4j logs on AI dashboard
reporting.log4j=true

reporting.groupReport=true
reporting.jenkins.name=${reporting.jenkins.name}





#SFTP configuration parameters
sftp.environment=PT140
sftp.key=EDGE_FTP_SERVER
sftp.file.json=sftpAuth.json
sftp.source.up=src/main/resources/testfile.txt
sftp.destination.up=remote/testfilenew.txt
sftp.source.down=/remote/testfile.txt
sftp.destination.down=/src/main/resources/testfilenew.txt
sftp.read.filepath=remote/
sftp.read.filename=testfile.txt
sftp.security.algo.check=true


email=true
email.subject=WNPAutomation
email.sender=annie.ali@telus.com
email.receiver=sitanshu.sharma@telusinternational.com,annie.ali@telusinternational.com
email.hostname=localhost
email.port=2525
email.userid=dummyuser
email.password=dummypwd

#By the usual the client whant this as true (To skip debugs)
reporting.extent.skip.debug.log=true
#reporting.extent.skip.debug.log=${reporting.extent.skip.debug.log}

#false --> will use DEFAULT (Will locate the files inside the project (projectpath\\target\\extent-reports\\  for report and projectpath\TestReport\ for Screenshots. the reports will be lost after each clean
#true  --> will use the project  provided path for both report/screenshots, the report/images will be saved in this path even after clean, is necessary manual deletion of the same
reporting.and.screenshots.keep.history=false
reporting.and.testng.keep.history=false
reporting.and.testng.time=15
#Keep the path as simple as possible (Closest to the root) e.g. C:\\bin\\UIReports\\
reporting.and.screenshots.keep.history.path=C:\\bin\\UIReports\\
reporting.testng.path=D:\\targetnew\\
#true will take SS for all status (Pass/Fail)
#False will only take SS for failures.
#screenshots.take.all=true
screenshots.take.all=${screenshots.take.all}
reporting.multiple=false
#tag to get screenshot in new naming format i.e TestCaseName_MethodName_TitlePage_Pass_Timestamp.png
reporting.screenshot.newNameFormat=true
full.screenshot=false
#(PATH TO STORE THE DOWNLOADS) DO NOT APPLY FOR ALL BROWSERS, DEPENDS ON THE SCENARIO
#driver.auto.download.path=C:\\bin\\
driver.auto.download.path=${driver.auto.download.path}

#Desktop support. ----------------------------------------------------------------------------------

desktop.shortwaittimeout=1500
desktop.longwaittimeout=3000
desktop.pagewaittimeout=6000

desktop.driver.local.url=http://localhost:9999

#desktop.driver.path=C:\\Bin\\Winium\\V1.6.0\\Winium.Desktop.Driver.exe
desktop.driver.path=${desktop.driver.path}

#desktop.app.name=SAP_750
desktop.app.name=${desktop.app.name}

#desktop.app.path=C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\saplogon.exe
desktop.app.path=${desktop.app.path}

#Provide the app.exe process that appears in the tasks to kill the app at the end of the script
#desktop.system.process.detail.name=appProcessName.exe
desktop.system.process.detail.name=${desktop.system.process.detail.name}

#desktop.app.options.profile=NA
desktop.app.options.profile=${desktop.app.options.profile}

#desktop.app.args=-port 345
desktop.app.args=${desktop.app.args}

desktop.app.launch.delay.miliseconds=5000
#desktop.app.launch.delay.miliseconds=${desktop.app.launch.delay.miliseconds}
